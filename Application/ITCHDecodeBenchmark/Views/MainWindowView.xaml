<Window x:Class="ITCHDecodeBenchmark.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ITCHDecodeBenchmark"
        xmlns:vm="clr-namespace:ITCHDecodeBenchmark.ViewModels"
        xmlns:util="clr-namespace:ITCHDecodeBenchmark.Util"
        mc:Ignorable="d"
        Title="ITCH Decoder Benchmark" WindowState="Maximized">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <util:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
            <Button Content="Add Program"  Margin="0 0 10 0" Command="{Binding AddProgramCommand}"/>
            <Label Content="Input File:"/>
            <TextBox Text="{Binding InputFile, Mode=OneWay}" IsReadOnly="True" Margin="0 0 10 0"
                     VerticalContentAlignment="Center"/>
            <Button Content="Select Input File" Margin="0 0 10 0" Command="{Binding SelectInputFileCommand}"/>
            <Label Content="Number of runs to be benchmarked:"/>
            <TextBox Text="{Binding NumberOfMessagesToExecute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0"
                VerticalContentAlignment="Center" Width="150"/>
            <Label Content="Number of order related messages to be executed per run:"/>
            <TextBox Text="{Binding NumberOfMessagesToExecute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0"
                VerticalContentAlignment="Center" Width="150"/>
            <Button Content="Run Benchmarks" Command="{Binding RunBenchmarksCommand}"/>
        </StackPanel>

        <DataGrid x:Name="ProgramsGrid" Grid.Row="1" AutoGenerateColumns="False" IsReadOnly="True" ItemsSource="{Binding Programs}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Program Path" Binding="{Binding Path}" Width="200"/>
                <DataGridTextColumn Header="Language" Binding="{Binding Language}" Width="100"/>
                <DataGridTemplateColumn Header="Execution Type" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding ExecutionTypes}"
                                      SelectedItem="{Binding ExecutionType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Order Related Messages ran" Binding="{Binding NumberOfMessagesExecuted}" Width="Auto"/>
                <DataGridTemplateColumn Header="Execution Time (s)">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding ExecutionTime}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsRunning, Converter={StaticResource InverseBoolToVisibilityConverter},
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <ProgressBar IsIndeterminate="True" Width="20" Height="20"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Visibility="{Binding IsRunning, Converter={StaticResource BoolToVisibilityConverter},
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Run Benchmark">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Command="{Binding RunProgramCommand}" Content="Run"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Notes" Binding="{Binding Notes}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
